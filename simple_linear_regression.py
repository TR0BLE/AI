# -*- coding: utf-8 -*-
"""simple_linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ByJ0NXpXm8a-8reVX3dvfg-LmorEf7ap
"""

# Create a simple regression to predict the price of a car

# Importing the libraries

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Importing the dataset
dataset = pd.read_excel('Car Price.xlsx')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

print(X)
print(y)

# Split the data into training and test set

from sklearn.model_selection import train_test_split
X_train, X_test,y_train, y_test = train_test_split(X, y, test_size = 1/3, random_state = 0)

print(X_train)
print(y_train)
print(X_test)
print(y_test)

# Train simple linear regressor

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

# Predict the required value

y_pred = regressor.predict(X_test)                    # predicts all the values for dependent variable in test set and store them in y_predictions/y_pred variable

# Plot train set results

plt.scatter(X_train, y_train, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Years of Usage v/s Price (Training Set)')
plt.xlabel('Years of Usage')
plt.ylabel('Price')
plt.show()

# Plot test set results

plt.scatter(X_test, y_test, color = 'red')
plt.plot(X_test, regressor.predict(X_test), color = 'blue')
plt.title('Years of Usage v/s Price (Training Set)')
plt.xlabel('Years of Usage')
plt.ylabel('Price')
plt.show()